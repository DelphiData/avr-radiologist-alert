name: AVR Monitor

on:
  schedule:
    # Hourly (UTC). monitor.py enforces allowed window in America/New_York.
    - cron: "0 * * * *"
  workflow_dispatch:
    inputs:
      force_alert:
        type: boolean
        default: false
        description: "Force Telegram alert regardless of counts/window"
      timezone:
        type: string
        default: "America/New_York"
        description: "Optional TZ override for this run"

permissions:
  contents: write

jobs:
  monitor:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      AVR_USERNAME: ${{ secrets.AVR_USERNAME }}
      AVR_PASSWORD: ${{ secrets.AVR_PASSWORD }}
      TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
      TELEGRAM_CHAT_IDS: ${{ secrets.TELEGRAM_CHAT_IDS }}
      # Default TZ; can be overridden by workflow_dispatch input below.
      TIMEZONE: America/New_York

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests beautifulsoup4 pytz pyyaml

      - name: Apply workflow inputs to env
        shell: bash
        run: |
          # FORCE_ALERT from input (defaults to false when not provided)
          if [ "${{ github.event_name }}" = "workflow_dispatch" ] && [ "${{ inputs.force_alert }}" = "true" ]; then
            echo "FORCE_ALERT=true" >> "$GITHUB_ENV"
          else
            echo "FORCE_ALERT=false" >> "$GITHUB_ENV"
          fi
          # TIMEZONE override from input (optional)
          if [ -n "${{ inputs.timezone }}" ]; then
            echo "TIMEZONE=${{ inputs.timezone }}" >> "$GITHUB_ENV"
          fi
          echo "Using TIMEZONE=$TIMEZONE FORCE_ALERT=$FORCE_ALERT"

      - name: Run monitor.py (creates/updates status.json)
        run: python monitor.py || true

      - name: Send Telegram alert via script
        # Never block artifacts/publish if Telegram fails
        run: python scripts/send_telegram.py || true

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: debug-artifacts
          path: |
            status.json
            docs/last_page.html
            docs/last_counts.csv
            docs/debug_*.html
            docs/debug_discover_*.html
            docs/*.json
          if-no-files-found: warn
          retention-days: 7
          compression-level: 6
          overwrite: false
          include-hidden-files: false

      - name: Publish status.json to docs
        if: always()
        shell: bash
        run: |
          set -e
          mkdir -p docs
          if [ -f status.json ]; then
            cp status.json docs/status.json
          else
            # Ensure a heartbeat even if status.json was not created
            echo '{}' > docs/status.json
          fi
          # Heartbeat file for quick checks
          printf '{"time_utc":"%s","event":"%s","sha":"%s","ref":"%s","workflow":"%s"}\n' \
            "$(date -u +%Y-%m-%dT%H:%M:%SZ)" \
            "${{ github.event_name }}" \
            "${{ github.sha }}" \
            "${{ github.ref }}" \
            "${{ github.workflow }}" > docs/last_monitor_run.json

          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config user.name "github-actions[bot]"
          git add docs/status.json docs/last_monitor_run.json || true
          if ! git diff --cached --quiet; then
            git commit -m "AVR Monitor: publish status.json [skip ci]"
            git push
          else
            echo "No changes to commit."
          fi
