name: AVR Monitor
"on":
  workflow_dispatch:
    inputs:
      force_alert:
        description: "Force alert (bypass window/threshold) for testing"
        required: false
        default: "false"
  schedule:
    - cron: "0 * * * *"
permissions:
  contents: write
concurrency:
  group: avr-monitor
  cancel-in-progress: false
jobs:
  monitor:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    env:
      AVR_USERNAME: ${{ secrets.AVR_USERNAME }}
      AVR_PASSWORD: ${{ secrets.AVR_PASSWORD }}
      TWILIO_ACCOUNT_SID: ${{ secrets.TWILIO_ACCOUNT_SID }}
      TWILIO_AUTH_TOKEN: ${{ secrets.TWILIO_AUTH_TOKEN }}
      TWILIO_FROM_NUMBER: ${{ secrets.TWILIO_FROM_NUMBER }}
      TIMEZONE: ${{ secrets.TIMEZONE }}
      FORCE_ALERT: ${{ github.event.inputs.force_alert }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install twilio pyyaml pytz

      - name: Preflight diagnostics
        run: |
          echo "Branch: ${{ github.ref }}"
          echo "Default branch: ${{ github.event.repository.default_branch }}"
          echo "Workflow file path should be .github/workflows/monitor.yml"
          python - <<'PY'
          import os
          def present(k):
              v = os.environ.get(k, "")
              print(f"{k} present: {bool(v)}")
          for k in ["AVR_USERNAME","AVR_PASSWORD","TWILIO_ACCOUNT_SID","TWILIO_AUTH_TOKEN","TWILIO_FROM_NUMBER","TIMEZONE"]:
              present(k)
          fa = os.environ.get("FORCE_ALERT","")
          print("FORCE_ALERT:", fa)
          PY

      - name: Run monitor
        run: |
          python monitor.py

      - name: Upload status.json artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: status-json
          path: status.json
          if-no-files-found: ignore
          retention-days: 7

      - name: Publish status.json to docs
        if: success() || failure()
        run: |
          if [ -f status.json ]; then
            mkdir -p docs
            cp status.json docs/status.json
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git add docs/status.json
            git commit -m "Update status.json [skip ci]" || true
            git push
          else
            echo "status.json not found; skipping publish"
          fi
        
